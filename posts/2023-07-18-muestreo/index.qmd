---
title: "Muestreo (I)"
description: "Un repaso a algunos conceptos introductorios al muestreo estadístico"
description-meta: "Explicación de conceptos sobre muestreo (sampling) estadístico"
author: "Leonardo Hansa"
date: "2023-07-18"
categories: [datos]
execute: 
  echo: false
freeze: auto
---

Vi en Twitter esto: 

<blockquote class="twitter-tweet"><p lang="es" dir="ltr">Las encuestas lo han dejado claro.<br>Saben lo que vas a votar.<br>Han decidido que el <a href="https://twitter.com/hashtag/23J?src=hash&amp;ref_src=twsrc%5Etfw">#23J</a> PP y Vox gobernarán este país.<br>¿Quito importancia a sus estimaciones?<br>No, porque generalizan la opinión de que no hay nada que hacer.<br>Pero no es cierto. <br>No hay nada escrito.<br>Si votamos, ganamos <a href="https://t.co/LUFoLm3WHT">pic.twitter.com/LUFoLm3WHT</a></p>&mdash; Carlos Sánchez Mato🔻✳️ (@carlossmato) <a href="https://twitter.com/carlossmato/status/1681041667573334019?ref_src=twsrc%5Etfw">July 17, 2023</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

¿Es inútil el muestreo? 

Si lo haces mal, sí. Como todo. 

Repaso algunos conceptos relacionados con el muestreo, sacados principalmente del curso de _Sampling with R_ de Datacamp. 

## De qué sirve el muestreo

Antes de las elecciones se hacen encuestas sobre intención de voto. ¿Qué se te viene a la mente con estas encuestas?

Pues que nunca te preguntan a ti. 

(Sí, ya, justo quizá a ti sí, una vez... pero no suele ocurrir. Lo normal es que nunca te hayan preguntado). 

A la mayoría de las personas no les preguntan nada. 

Pero un muestreo adecuado puede hacer que eso tenga valor. 

Es más, **un muestreo puede ser tu única opción para estudiar unos datos.**

- En un caso como el de las encuestas, no tienen recursos para encuestar a todos los votantes de un país como, pongamos, España ([unos 37 millones de personas](https://www.boe.es/boe/dias/2019/12/02/pdfs/BOE-A-2019-17344.pdf))
- En un análisis de sangre, no estudian todos los litros de sangre de tu cuerpo: te sacan una muestra y generalizan (sacarte toda la sangre es peligroso: no lo intentes). 
- Si tienes una base de datos con millones de clientes, algún algoritmo de _machine learning_ puede suponer mucha carga de trabajo para tu ordenador (no todos tenemos presupuesto para contratar servidores enormes en Amazon). )

¿Tiene sentido siempre el muestreo? No. Si estás corrigiendo unos exámenes de unos alumnos, no tiene sentido que corrijas un porcentaje y extrapoles los demás por ahorrarte el tiempo. 

## Muestreo aleatorio sistemático

Si has estudiado algo de estadística, te habrás topado con el muestreo aleatorio. Consiste en seleccionar las observaciones para una muestra sin ningún criterio en concreto: esta sí, esta no, esta sí, esta también porque sí, esta no, esta tampoco...

Me gusta un [conjunto de datos con métricas de pingüinos](https://allisonhorst.github.io/palmerpenguins/) disponible en cualquier software estadístico que se precie. 


```{r}
#| label: datos
penguins <- palmerpenguins::penguins

knitr::kable(head(penguins))
```

Una de las métricas que tiene es la longitud del pico, en milímetros. 

```{r}
#| label: histograma1

library(ggplot2)
theme_set(theme_light())
ggplot(penguins) + 
  geom_histogram(aes(x = bill_length_mm), fill = "#800080") + 
  xlim(c(30, 60))
```

¿Cómo cambia eso si lo dibujas sobre una muestra aleatoria de los pingüinos?

Lo primero es elegir la muestra aleatoria. Supón que etiquetas a cada uno como 1, 2, 3... así hasta 344, que son todos los pingüinos que tienes. 

En el siguiente gráfico tienes coloreados en azul los pingüinos que eliges para tu muestra (50). 

```{r}
set.seed(800080)
filas <- sample(seq_len(nrow(penguins)), 50)
penguins$seleccionado <- FALSE
penguins$seleccionado[filas] <- TRUE
penguins$id <- seq_len(nrow(penguins))

ggplot(penguins) + 
  geom_col(aes(x = id, y = 1, fill = seleccionado))

```

¿Cómo cambia la distribución de la longitud del pico en esta muestra? 

```{r}
#| label: hist2
ggplot(subset(penguins, seleccionado)) + 
  geom_histogram(aes(x = bill_length_mm), fill = "#800080") + 
  xlim(c(30, 60))
```

Hemos perdido valores extremos pero se mantiene una forma parecida. 

Un tipo diferente de muestreo es el sistemático, que consiste en hacer una selección basada en un criterio con respecto a la posición de la observación en el conjunto de datos. En el siguiente gráfico, pinto en azul al pingüino 1, 7, 13, etc... o sea, selecciono al primer pingüino de cada 6. 


```{r}
#| label: samplesist
div <- nrow(penguins) %/% 50

penguins$seleccionado2 <- FALSE
penguins$seleccionado2[seq_len(50) * div] <- TRUE

ggplot(penguins) + 
  geom_col(aes(x = id, y = 1, fill = seleccionado2))
```

```{r}
#| label: hist3
ggplot(subset(penguins, seleccionado2)) + 
  geom_histogram(aes(x = bill_length_mm), fill = "#800080") + 
  xlim(c(30, 60))
```

Aparte del caso extremo, la distribución no ha cambiado mucho, en parte porque la distribución de las observaciones no sigue ningún orden en concreto. Si tu tabla de datos sigue un orden, deberás valorar si ese orden afecta al sistema que eliges para muestrear tus datos. 


## Muestreo estratificado

En el conjunto de datos tenemos tres especies de pingüinos. 

```{r}
library(dplyr)
penguins |> 
  count(species) |> 
  ggplot(aes(x = reorder(species, n), y = n)) + 
  geom_col(fill = "#800080") +
  labs(x = "Especie", y = "Observaciones") + 
  coord_flip()
```

Algo habitual en _machine learning_ forzar a mantener esa proporción diferente de especies en la muestra elegida, para que el conjunto de datos de trabajo mantenga esa distribución original. 

¿Pero qué pasa si no quieres que así sea? 

Imagina que estás estudiando si una medicación es efectiva o no. Si mantienes la proporción original, puede ser que de la especie menos representada (Chinstrap) te quedes casi sin muestra. 

Eso te puede venir mal, porque tú necesitas que haya muestra de todas las especies, para saber si en una especie el medicamento es más o menos efectivo. 

En un caso así, no querrías un muestreo estratificado, sino que forzarías incluso a que en la muestra, todos los grupos estuvieran igualmente representados. 

## Cómo afecta el tamaño de la muestra

Cuando tienes a mano la población total, puedes comparar los cálculos que hagas en tu muestra con los de la población (para cuando no tengas la población, te hablaré de esto en unos días). 

En el caso de los pingüinos, puedo calcular la media de la longitud del pico para la población: `r mean(penguins$bill_length_mm, na.rm = TRUE)`. 

O también para la muestra que calculé antes: 

```{r}
#| label: mean-sample
penguins |> 
  filter(seleccionado) |> 
  summarise(media_muestral = mean(bill_length_mm, na.rm = TRUE))
```

¿Son muy distintas?

Una medida de esta diferencia es el error relativo: 

$$\frac{|media_{pop} - media_{sample}|}{media_{pop}}$$


¿Cuál es la gracia? 

Pues que si tu tamaño muestral es muy pequeño, no hay ninguna garantía de que la media (o lo que estés midiendo) se parezca a la poblacional:

```{r}
penguins |> 
  slice_sample(n = 5) |> 
  summarise(media_muestral = mean(bill_length_mm, na.rm = TRUE))
```

Pero si dejas que el tamaño muestral crezca, tu cálculo se estabilizará. 

```{r}
#| label: evol-sample-error1
calcula_media <- function(size) {
  penguins |> 
    slice_sample(n = size, replace = FALSE) |> 
    summarise(media_muestral = mean(bill_length_mm, na.rm = TRUE)) |> 
    mutate(sample_size = size)
}

library(purrr)

df_medias <- map_dfr(seq_len(nrow(penguins)), calcula_media)
```


```{r}
#| label: evol-sample-error2
df_medias |> 
  mutate(media_total = mean(penguins$bill_length_mm, na.rm = TRUE), 
         error = abs(media_total - media_muestral) / media_total) |> 
  ggplot(aes(x = sample_size, y = error)) + 
  geom_line() + 
  geom_smooth(col = "#800080")+ 
  labs(y = "Error relativo", x = "Tamaño muestral")

```


[En unos días](https://longitudsinanchura.com/posts/2023-07-21-muestreo-ii) te escribo sobre cómo aproximar esto cuando no tienes acceso a la media poblacional, pero que puedas valorar si tu muestra es adecuada o no.
